---
import Layout from '../layouts/Layout.astro';
import Author from "../components/home/Author.astro";
import Service from "../components/home/Service.astro";
import { getCollection } from 'astro:content';

import MarkdownIt from 'markdown-it';
import Footer from "../components/Footer.astro";

// Initialize markdown-it
const md = new MarkdownIt({
    html: true,        // Enable HTML tags in source
    breaks: true,      // Convert '\n' in paragraphs into <br>
    linkify: true      // Autoconvert URL-like text to links
});

const services = await getCollection('services', ({ data }) => {
    return data.isActive !== false;
});

// Sort services and parse their markdown content
const sortedServices = services
    .sort((a, b) => a.data.order - b.data.order)
    .map(service => ({
        ...service,
        parsedContent: service.body ? md.render(service.body) : "No content"
    }));


---

<Layout>
    <main class="flex flex-col lg:flex-row gap-6 p-6 justify-center">
        <div class="flex-1/2 max-w-lg">
            <Author />
        </div>


        <div class="max-w-3xl">
            <h1 class="text-4xl p-4">Diensten</h1>

            <div class="grid grid-cols-1 sm:grid-cols-2 gap-6">
                {sortedServices.map((service) => (
                    <Service
                        header={service.data.header}
                        referenceLink={service.data.referenceLink}
                        referenceLinkText={service.data.referenceLinkText}
                    >
                        <div class="prose prose-sm max-w-none" set:html={service.parsedContent} />
                    </Service>
                ))}
            </div>
        </div>

    </main>

    <Footer/>
</Layout>